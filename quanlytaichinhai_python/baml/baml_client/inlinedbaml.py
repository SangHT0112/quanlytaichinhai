# ----------------------------------------------------------------------------
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
# ----------------------------------------------------------------------------

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code using: baml-cli generate
# baml-cli is available with the baml package.

_file_map = {

    "clients.baml": "// Learn more about clients at https://docs.boundaryml.com/docs/snippets/clients/overview\r\n\r\nclient<llm> Gemini_2_0_pro {\r\n  provider google-ai\r\n  options {\r\n    model \"gemini-2.0-flash\"\r\n    api_key env.GOOGLE_API_KEY\r\n  }\r\n}\r\n\r\nclient<llm> Gemini_1_5_pro {\r\n  provider google-ai\r\n  options {\r\n    model \"gemini-1.5-flash\"\r\n    api_key env.GOOGLE_API_KEY\r\n  }\r\n}\r\n\r\nclient<llm> Vertex {\r\n  provider vertex-ai\r\n  options {\r\n    model gemini-1.5-pro\r\n    location us-central1\r\n    api_key env.GOOGLE_API_KEY\r\n  }\r\n}\r\n\r\nclient<llm> CustomGPT4o {\r\n  provider openai\r\n  options {\r\n    model \"gpt-4o\"\r\n    api_key env.OPENAI_API_KEY\r\n    temperature 0.2\r\n  }\r\n}\r\n\r\nclient<llm> CustomOllama {\r\n  provider \"openai-generic\"\r\n  options {\r\n    base_url \"http://Ollama_IP:Ollama_PORT/v1\"\r\n    model \"llava:7b\"\r\n  }\r\n}\r\n\r\nclient<llm> CustomSonnet {\r\n  provider anthropic\r\n  options {\r\n    model \"claude-3-5-sonnet-20241022\"\r\n    api_key env.ANTHROPIC_API_KEY\r\n  }\r\n}\r\n\r\n",
    "generators.baml": "// This helps use auto generate libraries you can use in the language of\r\n// your choice. You can have multiple generators if you use multiple languages.\r\n// Just ensure that the output_dir is different for each generator.\r\ngenerator target {\r\n    // Valid values: \"python/pydantic\", \"typescript\", \"ruby/sorbet\", \"rest/openapi\"\r\n    output_type \"python/pydantic\"\r\n\r\n    // Where the generated code will be saved (relative to baml_src/)\r\n    output_dir \"../\"\r\n\r\n    // The version of the BAML package you have installed (e.g. same version as your baml-py or @boundaryml/baml).\r\n    // The BAML VSCode extension version should also match this version.\r\n    version \"0.202.1\"\r\n\r\n    // Valid values: \"sync\", \"async\"\r\n    // This controls what `b.FunctionName()` will be (sync or async).\r\n    default_client_mode sync\r\n}",
    "invoice.baml": "class Transaction {\n  type string @description(\"Loại giao dịch: ví dụ 'expense'\")\n  amount float @description(\"Số tiền đã chi tiêu cho món hàng\")\n  category string @description(\"Phân loại chi tiêu, ví dụ: Ăn uống\")\n  description string @description(\"Tên món hàng hoặc dịch vụ\")\n}\n\nclass Invoices {\n  group_name string @description(\"Tên cửa hàng hoặc đơn vị bán hàng ghi trên hóa đơn\")\n  transaction_date string @description(\"Ngày giao dịch, định dạng yyyy-mm-dd\")\n  total_amount float @description(\"Tổng tiền thanh toán\")\n  transactions Transaction[] @description(\"Danh sách các giao dịch được ghi nhận trong hóa đơn\")\n}\n\n\n\n\nfunction ExtractInvoices(images: image[]) -> Invoices {\n  client \"ollama/llama3\"\n  prompt #\"\n    {{_.role(\"user\")}}\n    Hãy trích xuất các thông tin từ hóa đơn sau:\n    - Trường `group_name` là tên cửa hàng/quán ăn được in trên đầu hóa đơn. Nếu không xác định được rõ ràng, hãy đoán từ phần có font to hoặc nổi bật nhất trên hóa đơn. Nếu vẫn không có, hãy đặt là \"Hóa đơn\".\n    - Ngày giao dịch (transaction_date)\n    - Tổng số tiền thanh toán (total_amount)\n    - Danh sách các món hàng đã mua (transactions) gồm: loại, số tiền, phân loại, mô tả\n\n     📂 Danh sách category được nhận: ['Lương', 'Ăn uống', 'Di chuyển', 'Giải trí', 'Hóa đơn', 'Y tế', 'Nhà cửa', 'Giáo dục', 'Du lịch', 'Thể thao', 'Thưởng']\n     Hãy đảm bảo rằng trường `category` của mỗi giao dịch phải thuộc danh sách trên. Nếu không rõ, hãy chọn giá trị gần đúng nhất.\n     \n    {% for img in images %}\n    [Ảnh {{loop.index}}]\n    {{ img }}\n    {% endfor %}\n\n    Trả về đúng theo định dạng sau:\n    {\n      \"group_name\": \"...\",\n      \"transaction_date\": \"...\",\n      \"total_amount\": ...,\n      \"transactions\": [\n        {\n          \"type\": \"expense\",\n          \"amount\": ...,\n          \"category\": \"...\",\n          \"description\": \"...\"\n        },\n        ...\n      ]\n    }\n    \n    {{ ctx.output_format }}\n  \"#\n}\n",
}

def get_baml_files():
    return _file_map